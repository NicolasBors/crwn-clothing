{"ast":null,"code":"var _jsxFileName = \"/Users/nicolasborson/Documents/ECOMMERCE/crwn-clothing/src/pages/shop/shop.component.jsx\";\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport CollectionOverview from '../../components/collections-overview/collections-overview.component';\nimport CollectionPage from '../collection/collection.component';\nimport { firestore, convertCollectionSnapshotToMap } from '../../firebase/firebase.utils';\n\nclass ShopPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.unsubscribeFromSnapshot = null;\n  }\n\n  componentDidMount() {\n    const collectionRef = firestore.collection('collections');\n    collectionRef.onSnapshot(async snapshot => {\n      const collectionsMap = convertCollectionSnapshotToMap(snapshot);\n    });\n  }\n\n  render() {\n    const {\n      match\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"shop-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      component: CollectionOverview,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      component: CollectionPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionsMap => dispatch(updateCollections)\n});\n\nexport default ShopPage;","map":{"version":3,"sources":["/Users/nicolasborson/Documents/ECOMMERCE/crwn-clothing/src/pages/shop/shop.component.jsx"],"names":["React","Route","connect","CollectionOverview","CollectionPage","firestore","convertCollectionSnapshotToMap","ShopPage","Component","unsubscribeFromSnapshot","componentDidMount","collectionRef","collection","onSnapshot","snapshot","collectionsMap","render","match","props","path","mapDispatchToProps","dispatch","updateCollections"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,kBAAP,MAA+B,sEAA/B;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AAEA,SAASC,SAAT,EAAoBC,8BAApB,QAA0D,+BAA1D;;AAEA,MAAMC,QAAN,SAAuBP,KAAK,CAACQ,SAA7B,CAAuC;AAAA;AAAA;AAAA,SAEnCC,uBAFmC,GAET,IAFS;AAAA;;AAInCC,EAAAA,iBAAiB,GAAG;AAChB,UAAMC,aAAa,GAAGN,SAAS,CAACO,UAAV,CAAqB,aAArB,CAAtB;AAEAD,IAAAA,aAAa,CAACE,UAAd,CAAyB,MAAMC,QAAN,IAAkB;AACvC,YAAMC,cAAc,GAAGT,8BAA8B,CAACQ,QAAD,CAArD;AACH,KAFD;AAGH;;AAEDE,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEC,MAAAA;AAAF,QAAY,KAAKC,KAAvB;AACA,wBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAG,GAAED,KAAK,CAACE,IAAK,EAAjC;AAAoC,MAAA,SAAS,EAAEhB,kBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAG,GAAEc,KAAK,CAACE,IAAK,gBAA3B;AAA4C,MAAA,SAAS,EAAEf,cAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ;AAMH;;AApBkC;;AAuBvC,MAAMgB,kBAAkB,GAAGC,QAAQ,KAAK;AACpCC,EAAAA,iBAAiB,EAAEP,cAAc,IAAIM,QAAQ,CAACC,iBAAD;AADT,CAAL,CAAnC;;AAIA,eAAef,QAAf","sourcesContent":["import React from 'react'\nimport { Route } from 'react-router-dom'\nimport { connect } from 'react-redux'\n\nimport CollectionOverview from '../../components/collections-overview/collections-overview.component'\nimport CollectionPage from '../collection/collection.component'\n\nimport { firestore, convertCollectionSnapshotToMap } from '../../firebase/firebase.utils'\n\nclass ShopPage extends React.Component {\n\n    unsubscribeFromSnapshot = null\n\n    componentDidMount() {\n        const collectionRef = firestore.collection('collections')\n\n        collectionRef.onSnapshot(async snapshot => {\n            const collectionsMap = convertCollectionSnapshotToMap(snapshot)\n        })\n    }\n\n    render() {\n        const { match } = this.props\n        return (\n            <div className='shop-page'>\n                <Route exact path={`${match.path}`} component={CollectionOverview} />\n                <Route path={`${match.path}/:collectionId`} component={CollectionPage} />\n            </div>\n        )\n    }\n}\n\nconst mapDispatchToProps = dispatch => ({\n    updateCollections: collectionsMap => dispatch(updateCollections)\n})\n\nexport default ShopPage"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { takeEvery } from 'redux-saga/effects';\nimport { firestore, convertCollectionSnapshotToMap } from '../../firebase/firebase.utils';\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from './shop.actions';\nimport ShopActionTypes from './shop.types';\nexport function* fetchCollectionsAsync() {\n  yield;\n  const collectionRef = firestore.collection('collections');\n  const snapshot = yield collectionRef / getComputedStyle(); // collectionRef\n  //     .get()\n  //     .then(snapshot => {\n  //         const collectionsMap = convertCollectionSnapshotToMap(snapshot)\n  //         dispatch(fetchCollectionsSuccess(collectionsMap))\n  //     })\n  //     .catch(error => dispatch(fetchCollectionsFailure(error.message)))\n}\nexport function* fetchCollectionsStart() {\n  yield takeEvery(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}","map":{"version":3,"sources":["/Users/nicolasborson/Documents/ECOMMERCE/crwn-clothing/src/redux/shop/shop.sagas.js"],"names":["takeEvery","firestore","convertCollectionSnapshotToMap","fetchCollectionsSuccess","fetchCollectionsFailure","ShopActionTypes","fetchCollectionsAsync","collectionRef","collection","snapshot","getComputedStyle","fetchCollectionsStart","FETCH_COLLECTIONS_START"],"mappings":"AAAA,SAASA,SAAT,QAA0B,oBAA1B;AAEA,SAASC,SAAT,EAAoBC,8BAApB,QAA0D,+BAA1D;AAEA,SACIC,uBADJ,EAEIC,uBAFJ,QAGO,gBAHP;AAKA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,OAAO,UAAUC,qBAAV,GAAkC;AACrC;AAEA,QAAMC,aAAa,GAAGN,SAAS,CAACO,UAAV,CAAqB,aAArB,CAAtB;AACA,QAAMC,QAAQ,GAAG,MAAMF,aAAa,GAACG,gBAAgB,EAArD,CAJqC,CAKrC;AACA;AACA;AACA;AACA;AACA;AACA;AACH;AAED,OAAO,UAAUC,qBAAV,GAAkC;AACrC,QAAMX,SAAS,CACXK,eAAe,CAACO,uBADL,EAEXN,qBAFW,CAAf;AAIH","sourcesContent":["import { takeEvery } from 'redux-saga/effects'\n\nimport { firestore, convertCollectionSnapshotToMap } from '../../firebase/firebase.utils'\n\nimport {\n    fetchCollectionsSuccess,\n    fetchCollectionsFailure\n} from './shop.actions'\n\nimport ShopActionTypes from './shop.types'\n\nexport function* fetchCollectionsAsync() {\n    yield\n\n    const collectionRef = firestore.collection('collections')\n    const snapshot = yield collectionRef/getComputedStyle()\n    // collectionRef\n    //     .get()\n    //     .then(snapshot => {\n    //         const collectionsMap = convertCollectionSnapshotToMap(snapshot)\n    //         dispatch(fetchCollectionsSuccess(collectionsMap))\n    //     })\n    //     .catch(error => dispatch(fetchCollectionsFailure(error.message)))\n}\n\nexport function* fetchCollectionsStart() {\n    yield takeEvery(\n        ShopActionTypes.FETCH_COLLECTIONS_START,\n        fetchCollectionsAsync\n    )\n}"]},"metadata":{},"sourceType":"module"}